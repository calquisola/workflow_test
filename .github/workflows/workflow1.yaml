name: Build, Test and Scan Image

on:
  workflow_dispatch:
    inputs:
      image:
        description: 'Select the image'
        required: true
        type: choice
        options:
          - node-base
          - frontend
          - backend
          - postgresql
          - memcached
  workflow_call:
    inputs:
      image:
        default: 'node-base'
        description: True if should force build, else only if changed files on this ref
        type: string
        required: true
jobs:
  get-image-details:
    runs-on: ubuntu-latest
    outputs:
      image-details: ${{ steps.get-build-parameters.outputs.image-details }}
      service-name: ${{ fromJSON(steps.get-build-parameters.outputs.image-details).service-name }}
      json-array: ${{ steps.format-json-array.outputs.value }}
    steps:
    - name: Check out the repo
      uses: actions/checkout@v4

    - name: Set up for node GH Actions
      uses: ./.github/actions/setup-node-actions

    - name: Get image build parameter details
      id: get-build-parameters
      uses: ./.github/actions/get-image-details
      with:
        name: ${{ inputs.image}}
    - name: Json Array
      id: format-json-array
      run: |
        format=$(echo '[${{ steps.get-build-parameters.outputs.image-details }}]' | jq .)
        echo "value<<EOF" >> $GITHUB_OUTPUT
        echo "$format" >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT

  # print-array:
  #   runs-on: ubuntu-latest
  #   needs: [get-image-details]
  #   strategy:
  #     matrix:
  #       include: ${{ fromJSON(needs.get-image-details.outputs.json-array) }}
  #   steps:
  #   - name: Check out code
  #     uses: actions/checkout@v2

  #   - name: Parse Image Details
  #     id: print-array
  #     run: |
  #       echo "Deploying to ${{ matrix.service-name }}"

  build:
    runs-on: ubuntu-latest
    needs: [get-image-details]
    steps:
    - name: Check out code
      uses: actions/checkout@v2

    - name: Parse Image Details
      id: parse-json
      run: |
        echo "Deploying to ${{ needs.get-image-details.outputs.service-name }}"
        echo "Deploying to ${{ fromJSON(needs.get-image-details.outputs.image-details).service-name }}"
        echo "Deploying to ${{ fromJSON(needs.get-image-details.outputs.image-details).docker-file-path }}"
        echo "Json Array is ${{ needs.get-image-details.outputs.json-array }}"


  # build-images:
  #   runs-on: ubuntu-latest
  #   strategy:
  #     matrix:
  #       service-name: [frontend, backend, postgres]

  #   name: Build ${{ matrix.service-name }} image
  #   steps:
  #     - name: Check out repo
  #       uses: actions/checkout@v4
  #       with:
  #         # To compute dirty files need fetch-depth=2 to grab previous commit on it
  #         fetch-depth: 2
  #     - name: Display Service Name
  #       id: display
  #       run: |
  #         echo "Deploying to ${{ matrix.service-name }}"
  #         echo "Deploying to ${{ matrix.service-name }}"